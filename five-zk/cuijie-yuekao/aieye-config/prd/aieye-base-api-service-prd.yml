server:
  port: 8086


spring:
  zipkin:
    rabbitmq:
      queue: zipkin
  sleuth:
    sampler:
      percentage: 0.2
  datasource:
    name: mysql_aieye
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
      #监控统计拦截的filters
      filters: stat
      driver-class-name: com.mysql.jdbc.Driver
      #基本属性
      url: jdbc:mysql://10.20.2.13:3306/aieye2?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull
      username: root
      password: jffc3501
      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
#Redis cache 过期时间设置
redis:
  host: 10.20.1.182
  port: 6399
  password: jffc3501
  cache:
    expiration: 7200
# sleuth配置
#spring:
#  zipkin:
#    rabbitmq:
#      queue: zipkin
#  sleuth:
#    sampler:
#      percentage: 0.2
#  datasource:
#      type: com.zaxxer.hikari.HikariDataSource
#      driver-class-name: com.mysql.jdbc.Driver
#      url: jdbc:mysql://172.22.241.55:3306/witeye?useUnicode=true&characterEncoding=utf-8
#      username: root
#      password: jffc3501

# 分库分表支持
#sharding:
#  jdbc:
#    defaultDataSourceName:
#      type: com.zaxxer.hikari.HikariDataSource
#      driver-class-name: com.mysql.jdbc.Driver
#      username: root
#      password: jffc3501
#      jdbc-url: jdbc:mysql://172.22.241.55:3306/aieye_test?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
#    datasource:
#      names: ds
#      ds:
#        type: com.zaxxer.hikari.HikariDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        username: root
#        password: jffc3501
#        jdbc-url: jdbc:mysql://172.22.241.55:3306/aieye_test?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
#    config:
#      sharding:
#        tables:
#          sys_log:
#            actual-data-nodes: ds.sys_log_${0..1}
#            table-strategy:
#              inline:
#                sharding-column: id
#                algorithm-expression: sys_log_${id % 2}
#            key-generator-column-name: id

#mybaits-plus配置，修改主键类型，mapper.xml、type 别名等
mybatis:
  mapperLocations: com/cndrealty/modules/**/mapper/xml/*.xml  #注意：一定要对应mapper映射xml文件的所在路径
  typeAliasesPackage: com.cndrealty.modules.*.entity  # 注意：对应实体类的路径
#mybatis-plus:
#  mapper-locations: com.cndrealty.modules/**/mapping/*.xml
#  typeAliasesPackage:  com.cndrealty.modules/**/entity
#  global-config:
#    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
#    id-type: 0
#    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
#    field-strategy: 1
#    #驼峰下划线转换
#    db-column-underline: true
#    #刷新mapper 调试神器
#    refresh-mapper: true
#    #数据库大写下划线转换
#    #capital-mode: true
#  configuration:
#    map-underscore-to-camel-case: true
#    cache-enabled: true

hs_api_url: http://47.107.193.209:10080/rentalHouse
appid: apptestappid
appsecret: Y8O6SDQuasdwq21
file_app_code: file
jpush_is_product:
AES_key: QWERTBVZFAD12YHB
api_url: http://172.22.241.55:8086/
frontPath: f
request_scheme: http
saas_api_url: http://172.22.244.148:8070
# 七牛OSS 配置
# qiniu:
#  accessKey: hM2cBDEM0FTYzpXbigRW90kV12NhhzhFM3jCzurJ
#  secretKey: ENC(HM/K0KmtFoZSBhGDEA0Ez71ePTncZlQ954DfLNMZuOftKZq+2WR+dCXH9QEsf768q9wwd92RXLE=)
#  bucket: pigcloud
#  qiniuHost: http://p0hpm86wj.bkt.clouddn.com/
logging:
  level:
    com.cndrealty.modules: debug
defaultAppletId: 6cca6d780d3b40b089b2b8e54efb89a3
